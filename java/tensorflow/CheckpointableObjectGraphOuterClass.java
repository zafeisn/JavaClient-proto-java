// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/checkpointable_object_graph.proto

package tensorflow;

public final class CheckpointableObjectGraphOuterClass {
  private CheckpointableObjectGraphOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CheckpointableObjectGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.CheckpointableObjectGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject> 
        getNodesList();
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject getNodes(int index);
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tensorflow.CheckpointableObjectGraph}
   */
  public  static final class CheckpointableObjectGraph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.CheckpointableObjectGraph)
      CheckpointableObjectGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CheckpointableObjectGraph.newBuilder() to construct.
    private CheckpointableObjectGraph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckpointableObjectGraph() {
      nodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CheckpointableObjectGraph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.Builder.class);
    }

    public interface CheckpointableObjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference> 
          getChildrenList();
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference getChildren(int index);
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      int getChildrenCount();
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder> 
          getChildrenOrBuilderList();
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder getChildrenOrBuilder(
          int index);

      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor> 
          getAttributesList();
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor getAttributes(int index);
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      int getAttributesCount();
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder> 
          getAttributesOrBuilderList();
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder getAttributesOrBuilder(
          int index);

      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference> 
          getSlotVariablesList();
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference getSlotVariables(int index);
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      int getSlotVariablesCount();
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder> 
          getSlotVariablesOrBuilderList();
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder getSlotVariablesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject}
     */
    public  static final class CheckpointableObject extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
        CheckpointableObjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CheckpointableObject.newBuilder() to construct.
      private CheckpointableObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CheckpointableObject() {
        children_ = java.util.Collections.emptyList();
        attributes_ = java.util.Collections.emptyList();
        slotVariables_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CheckpointableObject(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  children_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference>();
                  mutable_bitField0_ |= 0x00000001;
                }
                children_.add(
                    input.readMessage(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.parser(), extensionRegistry));
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  attributes_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor>();
                  mutable_bitField0_ |= 0x00000002;
                }
                attributes_.add(
                    input.readMessage(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.parser(), extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  slotVariables_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference>();
                  mutable_bitField0_ |= 0x00000004;
                }
                slotVariables_.add(
                    input.readMessage(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            children_ = java.util.Collections.unmodifiableList(children_);
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            attributes_ = java.util.Collections.unmodifiableList(attributes_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            slotVariables_ = java.util.Collections.unmodifiableList(slotVariables_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder.class);
      }

      public interface ObjectReferenceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * An index into `CheckpointableObjectGraph.nodes`, indicating the object
         * being referenced.
         * </pre>
         *
         * <code>int32 node_id = 1;</code>
         */
        int getNodeId();

        /**
         * <pre>
         * A user-provided name for the edge.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         */
        java.lang.String getLocalName();
        /**
         * <pre>
         * A user-provided name for the edge.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         */
        com.google.protobuf.ByteString
            getLocalNameBytes();
      }
      /**
       * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference}
       */
      public  static final class ObjectReference extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
          ObjectReferenceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ObjectReference.newBuilder() to construct.
        private ObjectReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ObjectReference() {
          nodeId_ = 0;
          localName_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ObjectReference(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  nodeId_ = input.readInt32();
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  localName_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder.class);
        }

        public static final int NODE_ID_FIELD_NUMBER = 1;
        private int nodeId_;
        /**
         * <pre>
         * An index into `CheckpointableObjectGraph.nodes`, indicating the object
         * being referenced.
         * </pre>
         *
         * <code>int32 node_id = 1;</code>
         */
        public int getNodeId() {
          return nodeId_;
        }

        public static final int LOCAL_NAME_FIELD_NUMBER = 2;
        private volatile java.lang.Object localName_;
        /**
         * <pre>
         * A user-provided name for the edge.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         */
        public java.lang.String getLocalName() {
          java.lang.Object ref = localName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            localName_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * A user-provided name for the edge.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getLocalNameBytes() {
          java.lang.Object ref = localName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            localName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (nodeId_ != 0) {
            output.writeInt32(1, nodeId_);
          }
          if (!getLocalNameBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, localName_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (nodeId_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, nodeId_);
          }
          if (!getLocalNameBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, localName_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)) {
            return super.equals(obj);
          }
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference other = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference) obj;

          boolean result = true;
          result = result && (getNodeId()
              == other.getNodeId());
          result = result && getLocalName()
              .equals(other.getLocalName());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId();
          hash = (37 * hash) + LOCAL_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getLocalName().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder.class);
          }

          // Construct using tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            nodeId_ = 0;

            localName_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_descriptor;
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference getDefaultInstanceForType() {
            return tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.getDefaultInstance();
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference build() {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference buildPartial() {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference result = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference(this);
            result.nodeId_ = nodeId_;
            result.localName_ = localName_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference) {
              return mergeFrom((tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference other) {
            if (other == tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.getDefaultInstance()) return this;
            if (other.getNodeId() != 0) {
              setNodeId(other.getNodeId());
            }
            if (!other.getLocalName().isEmpty()) {
              localName_ = other.localName_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int nodeId_ ;
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the object
           * being referenced.
           * </pre>
           *
           * <code>int32 node_id = 1;</code>
           */
          public int getNodeId() {
            return nodeId_;
          }
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the object
           * being referenced.
           * </pre>
           *
           * <code>int32 node_id = 1;</code>
           */
          public Builder setNodeId(int value) {
            
            nodeId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the object
           * being referenced.
           * </pre>
           *
           * <code>int32 node_id = 1;</code>
           */
          public Builder clearNodeId() {
            
            nodeId_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object localName_ = "";
          /**
           * <pre>
           * A user-provided name for the edge.
           * </pre>
           *
           * <code>string local_name = 2;</code>
           */
          public java.lang.String getLocalName() {
            java.lang.Object ref = localName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              localName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * A user-provided name for the edge.
           * </pre>
           *
           * <code>string local_name = 2;</code>
           */
          public com.google.protobuf.ByteString
              getLocalNameBytes() {
            java.lang.Object ref = localName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              localName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * A user-provided name for the edge.
           * </pre>
           *
           * <code>string local_name = 2;</code>
           */
          public Builder setLocalName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            localName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A user-provided name for the edge.
           * </pre>
           *
           * <code>string local_name = 2;</code>
           */
          public Builder clearLocalName() {
            
            localName_ = getDefaultInstance().getLocalName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A user-provided name for the edge.
           * </pre>
           *
           * <code>string local_name = 2;</code>
           */
          public Builder setLocalNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            localName_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
        }

        // @@protoc_insertion_point(class_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference)
        private static final tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference();
        }

        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ObjectReference>
            PARSER = new com.google.protobuf.AbstractParser<ObjectReference>() {
          @java.lang.Override
          public ObjectReference parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ObjectReference(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ObjectReference> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ObjectReference> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface SerializedTensorOrBuilder extends
          // @@protoc_insertion_point(interface_extends:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * A name for the Tensor. Simple variables have only one
         * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
         * be restored on object creation as an optimization.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        java.lang.String getName();
        /**
         * <pre>
         * A name for the Tensor. Simple variables have only one
         * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
         * be restored on object creation as an optimization.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * The full name of the variable/tensor, if applicable. Used to allow
         * name-based loading of checkpoints which were saved using an
         * object-based API. Should match the checkpoint key which would have been
         * assigned by tf.train.Saver.
         * </pre>
         *
         * <code>string full_name = 2;</code>
         */
        java.lang.String getFullName();
        /**
         * <pre>
         * The full name of the variable/tensor, if applicable. Used to allow
         * name-based loading of checkpoints which were saved using an
         * object-based API. Should match the checkpoint key which would have been
         * assigned by tf.train.Saver.
         * </pre>
         *
         * <code>string full_name = 2;</code>
         */
        com.google.protobuf.ByteString
            getFullNameBytes();

        /**
         * <pre>
         * The generated name of the Tensor in the checkpoint.
         * </pre>
         *
         * <code>string checkpoint_key = 3;</code>
         */
        java.lang.String getCheckpointKey();
        /**
         * <pre>
         * The generated name of the Tensor in the checkpoint.
         * </pre>
         *
         * <code>string checkpoint_key = 3;</code>
         */
        com.google.protobuf.ByteString
            getCheckpointKeyBytes();
      }
      /**
       * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor}
       */
      public  static final class SerializedTensor extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
          SerializedTensorOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SerializedTensor.newBuilder() to construct.
        private SerializedTensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SerializedTensor() {
          name_ = "";
          fullName_ = "";
          checkpointKey_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SerializedTensor(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  fullName_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  checkpointKey_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder.class);
        }

        public static final int NAME_FIELD_NUMBER = 1;
        private volatile java.lang.Object name_;
        /**
         * <pre>
         * A name for the Tensor. Simple variables have only one
         * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
         * be restored on object creation as an optimization.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * A name for the Tensor. Simple variables have only one
         * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
         * be restored on object creation as an optimization.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FULL_NAME_FIELD_NUMBER = 2;
        private volatile java.lang.Object fullName_;
        /**
         * <pre>
         * The full name of the variable/tensor, if applicable. Used to allow
         * name-based loading of checkpoints which were saved using an
         * object-based API. Should match the checkpoint key which would have been
         * assigned by tf.train.Saver.
         * </pre>
         *
         * <code>string full_name = 2;</code>
         */
        public java.lang.String getFullName() {
          java.lang.Object ref = fullName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            fullName_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The full name of the variable/tensor, if applicable. Used to allow
         * name-based loading of checkpoints which were saved using an
         * object-based API. Should match the checkpoint key which would have been
         * assigned by tf.train.Saver.
         * </pre>
         *
         * <code>string full_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getFullNameBytes() {
          java.lang.Object ref = fullName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fullName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CHECKPOINT_KEY_FIELD_NUMBER = 3;
        private volatile java.lang.Object checkpointKey_;
        /**
         * <pre>
         * The generated name of the Tensor in the checkpoint.
         * </pre>
         *
         * <code>string checkpoint_key = 3;</code>
         */
        public java.lang.String getCheckpointKey() {
          java.lang.Object ref = checkpointKey_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            checkpointKey_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The generated name of the Tensor in the checkpoint.
         * </pre>
         *
         * <code>string checkpoint_key = 3;</code>
         */
        public com.google.protobuf.ByteString
            getCheckpointKeyBytes() {
          java.lang.Object ref = checkpointKey_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            checkpointKey_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!getNameBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
          }
          if (!getFullNameBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fullName_);
          }
          if (!getCheckpointKeyBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, checkpointKey_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getNameBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
          }
          if (!getFullNameBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fullName_);
          }
          if (!getCheckpointKeyBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, checkpointKey_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)) {
            return super.equals(obj);
          }
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor other = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor) obj;

          boolean result = true;
          result = result && getName()
              .equals(other.getName());
          result = result && getFullName()
              .equals(other.getFullName());
          result = result && getCheckpointKey()
              .equals(other.getCheckpointKey());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
          hash = (37 * hash) + FULL_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getFullName().hashCode();
          hash = (37 * hash) + CHECKPOINT_KEY_FIELD_NUMBER;
          hash = (53 * hash) + getCheckpointKey().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder.class);
          }

          // Construct using tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            name_ = "";

            fullName_ = "";

            checkpointKey_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_descriptor;
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor getDefaultInstanceForType() {
            return tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.getDefaultInstance();
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor build() {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor buildPartial() {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor result = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor(this);
            result.name_ = name_;
            result.fullName_ = fullName_;
            result.checkpointKey_ = checkpointKey_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor) {
              return mergeFrom((tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor other) {
            if (other == tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.getDefaultInstance()) return this;
            if (!other.getName().isEmpty()) {
              name_ = other.name_;
              onChanged();
            }
            if (!other.getFullName().isEmpty()) {
              fullName_ = other.fullName_;
              onChanged();
            }
            if (!other.getCheckpointKey().isEmpty()) {
              checkpointKey_ = other.checkpointKey_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * A name for the Tensor. Simple variables have only one
           * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
           * be restored on object creation as an optimization.
           * </pre>
           *
           * <code>string name = 1;</code>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * A name for the Tensor. Simple variables have only one
           * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
           * be restored on object creation as an optimization.
           * </pre>
           *
           * <code>string name = 1;</code>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * A name for the Tensor. Simple variables have only one
           * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
           * be restored on object creation as an optimization.
           * </pre>
           *
           * <code>string name = 1;</code>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A name for the Tensor. Simple variables have only one
           * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
           * be restored on object creation as an optimization.
           * </pre>
           *
           * <code>string name = 1;</code>
           */
          public Builder clearName() {
            
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A name for the Tensor. Simple variables have only one
           * `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
           * be restored on object creation as an optimization.
           * </pre>
           *
           * <code>string name = 1;</code>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            name_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object fullName_ = "";
          /**
           * <pre>
           * The full name of the variable/tensor, if applicable. Used to allow
           * name-based loading of checkpoints which were saved using an
           * object-based API. Should match the checkpoint key which would have been
           * assigned by tf.train.Saver.
           * </pre>
           *
           * <code>string full_name = 2;</code>
           */
          public java.lang.String getFullName() {
            java.lang.Object ref = fullName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              fullName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The full name of the variable/tensor, if applicable. Used to allow
           * name-based loading of checkpoints which were saved using an
           * object-based API. Should match the checkpoint key which would have been
           * assigned by tf.train.Saver.
           * </pre>
           *
           * <code>string full_name = 2;</code>
           */
          public com.google.protobuf.ByteString
              getFullNameBytes() {
            java.lang.Object ref = fullName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              fullName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The full name of the variable/tensor, if applicable. Used to allow
           * name-based loading of checkpoints which were saved using an
           * object-based API. Should match the checkpoint key which would have been
           * assigned by tf.train.Saver.
           * </pre>
           *
           * <code>string full_name = 2;</code>
           */
          public Builder setFullName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            fullName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The full name of the variable/tensor, if applicable. Used to allow
           * name-based loading of checkpoints which were saved using an
           * object-based API. Should match the checkpoint key which would have been
           * assigned by tf.train.Saver.
           * </pre>
           *
           * <code>string full_name = 2;</code>
           */
          public Builder clearFullName() {
            
            fullName_ = getDefaultInstance().getFullName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The full name of the variable/tensor, if applicable. Used to allow
           * name-based loading of checkpoints which were saved using an
           * object-based API. Should match the checkpoint key which would have been
           * assigned by tf.train.Saver.
           * </pre>
           *
           * <code>string full_name = 2;</code>
           */
          public Builder setFullNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            fullName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object checkpointKey_ = "";
          /**
           * <pre>
           * The generated name of the Tensor in the checkpoint.
           * </pre>
           *
           * <code>string checkpoint_key = 3;</code>
           */
          public java.lang.String getCheckpointKey() {
            java.lang.Object ref = checkpointKey_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              checkpointKey_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The generated name of the Tensor in the checkpoint.
           * </pre>
           *
           * <code>string checkpoint_key = 3;</code>
           */
          public com.google.protobuf.ByteString
              getCheckpointKeyBytes() {
            java.lang.Object ref = checkpointKey_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              checkpointKey_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The generated name of the Tensor in the checkpoint.
           * </pre>
           *
           * <code>string checkpoint_key = 3;</code>
           */
          public Builder setCheckpointKey(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            checkpointKey_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The generated name of the Tensor in the checkpoint.
           * </pre>
           *
           * <code>string checkpoint_key = 3;</code>
           */
          public Builder clearCheckpointKey() {
            
            checkpointKey_ = getDefaultInstance().getCheckpointKey();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The generated name of the Tensor in the checkpoint.
           * </pre>
           *
           * <code>string checkpoint_key = 3;</code>
           */
          public Builder setCheckpointKeyBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            checkpointKey_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
        }

        // @@protoc_insertion_point(class_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor)
        private static final tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor();
        }

        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SerializedTensor>
            PARSER = new com.google.protobuf.AbstractParser<SerializedTensor>() {
          @java.lang.Override
          public SerializedTensor parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SerializedTensor(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SerializedTensor> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SerializedTensor> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface SlotVariableReferenceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * An index into `CheckpointableObjectGraph.nodes`, indicating the
         * variable object this slot was created for.
         * </pre>
         *
         * <code>int32 original_variable_node_id = 1;</code>
         */
        int getOriginalVariableNodeId();

        /**
         * <pre>
         * The name of the slot (e.g. "m"/"v").
         * </pre>
         *
         * <code>string slot_name = 2;</code>
         */
        java.lang.String getSlotName();
        /**
         * <pre>
         * The name of the slot (e.g. "m"/"v").
         * </pre>
         *
         * <code>string slot_name = 2;</code>
         */
        com.google.protobuf.ByteString
            getSlotNameBytes();

        /**
         * <pre>
         * An index into `CheckpointableObjectGraph.nodes`, indicating the
         * `Object` with the value of the slot variable.
         * </pre>
         *
         * <code>int32 slot_variable_node_id = 3;</code>
         */
        int getSlotVariableNodeId();
      }
      /**
       * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference}
       */
      public  static final class SlotVariableReference extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
          SlotVariableReferenceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SlotVariableReference.newBuilder() to construct.
        private SlotVariableReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SlotVariableReference() {
          originalVariableNodeId_ = 0;
          slotName_ = "";
          slotVariableNodeId_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SlotVariableReference(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  originalVariableNodeId_ = input.readInt32();
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  slotName_ = s;
                  break;
                }
                case 24: {

                  slotVariableNodeId_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder.class);
        }

        public static final int ORIGINAL_VARIABLE_NODE_ID_FIELD_NUMBER = 1;
        private int originalVariableNodeId_;
        /**
         * <pre>
         * An index into `CheckpointableObjectGraph.nodes`, indicating the
         * variable object this slot was created for.
         * </pre>
         *
         * <code>int32 original_variable_node_id = 1;</code>
         */
        public int getOriginalVariableNodeId() {
          return originalVariableNodeId_;
        }

        public static final int SLOT_NAME_FIELD_NUMBER = 2;
        private volatile java.lang.Object slotName_;
        /**
         * <pre>
         * The name of the slot (e.g. "m"/"v").
         * </pre>
         *
         * <code>string slot_name = 2;</code>
         */
        public java.lang.String getSlotName() {
          java.lang.Object ref = slotName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            slotName_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The name of the slot (e.g. "m"/"v").
         * </pre>
         *
         * <code>string slot_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getSlotNameBytes() {
          java.lang.Object ref = slotName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            slotName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SLOT_VARIABLE_NODE_ID_FIELD_NUMBER = 3;
        private int slotVariableNodeId_;
        /**
         * <pre>
         * An index into `CheckpointableObjectGraph.nodes`, indicating the
         * `Object` with the value of the slot variable.
         * </pre>
         *
         * <code>int32 slot_variable_node_id = 3;</code>
         */
        public int getSlotVariableNodeId() {
          return slotVariableNodeId_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (originalVariableNodeId_ != 0) {
            output.writeInt32(1, originalVariableNodeId_);
          }
          if (!getSlotNameBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, slotName_);
          }
          if (slotVariableNodeId_ != 0) {
            output.writeInt32(3, slotVariableNodeId_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (originalVariableNodeId_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, originalVariableNodeId_);
          }
          if (!getSlotNameBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, slotName_);
          }
          if (slotVariableNodeId_ != 0) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, slotVariableNodeId_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)) {
            return super.equals(obj);
          }
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference other = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference) obj;

          boolean result = true;
          result = result && (getOriginalVariableNodeId()
              == other.getOriginalVariableNodeId());
          result = result && getSlotName()
              .equals(other.getSlotName());
          result = result && (getSlotVariableNodeId()
              == other.getSlotVariableNodeId());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + ORIGINAL_VARIABLE_NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getOriginalVariableNodeId();
          hash = (37 * hash) + SLOT_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getSlotName().hashCode();
          hash = (37 * hash) + SLOT_VARIABLE_NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSlotVariableNodeId();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder.class);
          }

          // Construct using tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            originalVariableNodeId_ = 0;

            slotName_ = "";

            slotVariableNodeId_ = 0;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_descriptor;
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference getDefaultInstanceForType() {
            return tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.getDefaultInstance();
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference build() {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference buildPartial() {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference result = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference(this);
            result.originalVariableNodeId_ = originalVariableNodeId_;
            result.slotName_ = slotName_;
            result.slotVariableNodeId_ = slotVariableNodeId_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference) {
              return mergeFrom((tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference other) {
            if (other == tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.getDefaultInstance()) return this;
            if (other.getOriginalVariableNodeId() != 0) {
              setOriginalVariableNodeId(other.getOriginalVariableNodeId());
            }
            if (!other.getSlotName().isEmpty()) {
              slotName_ = other.slotName_;
              onChanged();
            }
            if (other.getSlotVariableNodeId() != 0) {
              setSlotVariableNodeId(other.getSlotVariableNodeId());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int originalVariableNodeId_ ;
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the
           * variable object this slot was created for.
           * </pre>
           *
           * <code>int32 original_variable_node_id = 1;</code>
           */
          public int getOriginalVariableNodeId() {
            return originalVariableNodeId_;
          }
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the
           * variable object this slot was created for.
           * </pre>
           *
           * <code>int32 original_variable_node_id = 1;</code>
           */
          public Builder setOriginalVariableNodeId(int value) {
            
            originalVariableNodeId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the
           * variable object this slot was created for.
           * </pre>
           *
           * <code>int32 original_variable_node_id = 1;</code>
           */
          public Builder clearOriginalVariableNodeId() {
            
            originalVariableNodeId_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object slotName_ = "";
          /**
           * <pre>
           * The name of the slot (e.g. "m"/"v").
           * </pre>
           *
           * <code>string slot_name = 2;</code>
           */
          public java.lang.String getSlotName() {
            java.lang.Object ref = slotName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              slotName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The name of the slot (e.g. "m"/"v").
           * </pre>
           *
           * <code>string slot_name = 2;</code>
           */
          public com.google.protobuf.ByteString
              getSlotNameBytes() {
            java.lang.Object ref = slotName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              slotName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The name of the slot (e.g. "m"/"v").
           * </pre>
           *
           * <code>string slot_name = 2;</code>
           */
          public Builder setSlotName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            slotName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name of the slot (e.g. "m"/"v").
           * </pre>
           *
           * <code>string slot_name = 2;</code>
           */
          public Builder clearSlotName() {
            
            slotName_ = getDefaultInstance().getSlotName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The name of the slot (e.g. "m"/"v").
           * </pre>
           *
           * <code>string slot_name = 2;</code>
           */
          public Builder setSlotNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            slotName_ = value;
            onChanged();
            return this;
          }

          private int slotVariableNodeId_ ;
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the
           * `Object` with the value of the slot variable.
           * </pre>
           *
           * <code>int32 slot_variable_node_id = 3;</code>
           */
          public int getSlotVariableNodeId() {
            return slotVariableNodeId_;
          }
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the
           * `Object` with the value of the slot variable.
           * </pre>
           *
           * <code>int32 slot_variable_node_id = 3;</code>
           */
          public Builder setSlotVariableNodeId(int value) {
            
            slotVariableNodeId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * An index into `CheckpointableObjectGraph.nodes`, indicating the
           * `Object` with the value of the slot variable.
           * </pre>
           *
           * <code>int32 slot_variable_node_id = 3;</code>
           */
          public Builder clearSlotVariableNodeId() {
            
            slotVariableNodeId_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
        }

        // @@protoc_insertion_point(class_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference)
        private static final tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference();
        }

        public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SlotVariableReference>
            PARSER = new com.google.protobuf.AbstractParser<SlotVariableReference>() {
          @java.lang.Override
          public SlotVariableReference parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SlotVariableReference(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SlotVariableReference> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SlotVariableReference> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int CHILDREN_FIELD_NUMBER = 1;
      private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference> children_;
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference> getChildrenList() {
        return children_;
      }
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder> 
          getChildrenOrBuilderList() {
        return children_;
      }
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      public int getChildrenCount() {
        return children_.size();
      }
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference getChildren(int index) {
        return children_.get(index);
      }
      /**
       * <pre>
       * Objects which this object depends on.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder getChildrenOrBuilder(
          int index) {
        return children_.get(index);
      }

      public static final int ATTRIBUTES_FIELD_NUMBER = 2;
      private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor> attributes_;
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor> getAttributesList() {
        return attributes_;
      }
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder> 
          getAttributesOrBuilderList() {
        return attributes_;
      }
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      public int getAttributesCount() {
        return attributes_.size();
      }
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor getAttributes(int index) {
        return attributes_.get(index);
      }
      /**
       * <pre>
       * Serialized data specific to this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder getAttributesOrBuilder(
          int index) {
        return attributes_.get(index);
      }

      public static final int SLOT_VARIABLES_FIELD_NUMBER = 3;
      private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference> slotVariables_;
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference> getSlotVariablesList() {
        return slotVariables_;
      }
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder> 
          getSlotVariablesOrBuilderList() {
        return slotVariables_;
      }
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      public int getSlotVariablesCount() {
        return slotVariables_.size();
      }
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference getSlotVariables(int index) {
        return slotVariables_.get(index);
      }
      /**
       * <pre>
       * Slot variables owned by this object.
       * </pre>
       *
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder getSlotVariablesOrBuilder(
          int index) {
        return slotVariables_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < children_.size(); i++) {
          output.writeMessage(1, children_.get(i));
        }
        for (int i = 0; i < attributes_.size(); i++) {
          output.writeMessage(2, attributes_.get(i));
        }
        for (int i = 0; i < slotVariables_.size(); i++) {
          output.writeMessage(3, slotVariables_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < children_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, children_.get(i));
        }
        for (int i = 0; i < attributes_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, attributes_.get(i));
        }
        for (int i = 0; i < slotVariables_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, slotVariables_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject)) {
          return super.equals(obj);
        }
        tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject other = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject) obj;

        boolean result = true;
        result = result && getChildrenList()
            .equals(other.getChildrenList());
        result = result && getAttributesList()
            .equals(other.getAttributesList());
        result = result && getSlotVariablesList()
            .equals(other.getSlotVariablesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getChildrenCount() > 0) {
          hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
          hash = (53 * hash) + getChildrenList().hashCode();
        }
        if (getAttributesCount() > 0) {
          hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
          hash = (53 * hash) + getAttributesList().hashCode();
        }
        if (getSlotVariablesCount() > 0) {
          hash = (37 * hash) + SLOT_VARIABLES_FIELD_NUMBER;
          hash = (53 * hash) + getSlotVariablesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.CheckpointableObjectGraph.CheckpointableObject}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder.class);
        }

        // Construct using tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getChildrenFieldBuilder();
            getAttributesFieldBuilder();
            getSlotVariablesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (childrenBuilder_ == null) {
            children_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            childrenBuilder_.clear();
          }
          if (attributesBuilder_ == null) {
            attributes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            attributesBuilder_.clear();
          }
          if (slotVariablesBuilder_ == null) {
            slotVariables_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            slotVariablesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor;
        }

        @java.lang.Override
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject getDefaultInstanceForType() {
          return tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.getDefaultInstance();
        }

        @java.lang.Override
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject build() {
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject buildPartial() {
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject result = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject(this);
          int from_bitField0_ = bitField0_;
          if (childrenBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              children_ = java.util.Collections.unmodifiableList(children_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.children_ = children_;
          } else {
            result.children_ = childrenBuilder_.build();
          }
          if (attributesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              attributes_ = java.util.Collections.unmodifiableList(attributes_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.attributes_ = attributes_;
          } else {
            result.attributes_ = attributesBuilder_.build();
          }
          if (slotVariablesBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              slotVariables_ = java.util.Collections.unmodifiableList(slotVariables_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.slotVariables_ = slotVariables_;
          } else {
            result.slotVariables_ = slotVariablesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject) {
            return mergeFrom((tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject other) {
          if (other == tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.getDefaultInstance()) return this;
          if (childrenBuilder_ == null) {
            if (!other.children_.isEmpty()) {
              if (children_.isEmpty()) {
                children_ = other.children_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureChildrenIsMutable();
                children_.addAll(other.children_);
              }
              onChanged();
            }
          } else {
            if (!other.children_.isEmpty()) {
              if (childrenBuilder_.isEmpty()) {
                childrenBuilder_.dispose();
                childrenBuilder_ = null;
                children_ = other.children_;
                bitField0_ = (bitField0_ & ~0x00000001);
                childrenBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getChildrenFieldBuilder() : null;
              } else {
                childrenBuilder_.addAllMessages(other.children_);
              }
            }
          }
          if (attributesBuilder_ == null) {
            if (!other.attributes_.isEmpty()) {
              if (attributes_.isEmpty()) {
                attributes_ = other.attributes_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureAttributesIsMutable();
                attributes_.addAll(other.attributes_);
              }
              onChanged();
            }
          } else {
            if (!other.attributes_.isEmpty()) {
              if (attributesBuilder_.isEmpty()) {
                attributesBuilder_.dispose();
                attributesBuilder_ = null;
                attributes_ = other.attributes_;
                bitField0_ = (bitField0_ & ~0x00000002);
                attributesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getAttributesFieldBuilder() : null;
              } else {
                attributesBuilder_.addAllMessages(other.attributes_);
              }
            }
          }
          if (slotVariablesBuilder_ == null) {
            if (!other.slotVariables_.isEmpty()) {
              if (slotVariables_.isEmpty()) {
                slotVariables_ = other.slotVariables_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSlotVariablesIsMutable();
                slotVariables_.addAll(other.slotVariables_);
              }
              onChanged();
            }
          } else {
            if (!other.slotVariables_.isEmpty()) {
              if (slotVariablesBuilder_.isEmpty()) {
                slotVariablesBuilder_.dispose();
                slotVariablesBuilder_ = null;
                slotVariables_ = other.slotVariables_;
                bitField0_ = (bitField0_ & ~0x00000004);
                slotVariablesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSlotVariablesFieldBuilder() : null;
              } else {
                slotVariablesBuilder_.addAllMessages(other.slotVariables_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference> children_ =
          java.util.Collections.emptyList();
        private void ensureChildrenIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            children_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference>(children_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder> childrenBuilder_;

        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference> getChildrenList() {
          if (childrenBuilder_ == null) {
            return java.util.Collections.unmodifiableList(children_);
          } else {
            return childrenBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public int getChildrenCount() {
          if (childrenBuilder_ == null) {
            return children_.size();
          } else {
            return childrenBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference getChildren(int index) {
          if (childrenBuilder_ == null) {
            return children_.get(index);
          } else {
            return childrenBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder setChildren(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference value) {
          if (childrenBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildrenIsMutable();
            children_.set(index, value);
            onChanged();
          } else {
            childrenBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder setChildren(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder builderForValue) {
          if (childrenBuilder_ == null) {
            ensureChildrenIsMutable();
            children_.set(index, builderForValue.build());
            onChanged();
          } else {
            childrenBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder addChildren(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference value) {
          if (childrenBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildrenIsMutable();
            children_.add(value);
            onChanged();
          } else {
            childrenBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder addChildren(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference value) {
          if (childrenBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChildrenIsMutable();
            children_.add(index, value);
            onChanged();
          } else {
            childrenBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder addChildren(
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder builderForValue) {
          if (childrenBuilder_ == null) {
            ensureChildrenIsMutable();
            children_.add(builderForValue.build());
            onChanged();
          } else {
            childrenBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder addChildren(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder builderForValue) {
          if (childrenBuilder_ == null) {
            ensureChildrenIsMutable();
            children_.add(index, builderForValue.build());
            onChanged();
          } else {
            childrenBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder addAllChildren(
            java.lang.Iterable<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference> values) {
          if (childrenBuilder_ == null) {
            ensureChildrenIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, children_);
            onChanged();
          } else {
            childrenBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder clearChildren() {
          if (childrenBuilder_ == null) {
            children_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            childrenBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public Builder removeChildren(int index) {
          if (childrenBuilder_ == null) {
            ensureChildrenIsMutable();
            children_.remove(index);
            onChanged();
          } else {
            childrenBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder getChildrenBuilder(
            int index) {
          return getChildrenFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder getChildrenOrBuilder(
            int index) {
          if (childrenBuilder_ == null) {
            return children_.get(index);  } else {
            return childrenBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder> 
             getChildrenOrBuilderList() {
          if (childrenBuilder_ != null) {
            return childrenBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(children_);
          }
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder addChildrenBuilder() {
          return getChildrenFieldBuilder().addBuilder(
              tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.getDefaultInstance());
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder addChildrenBuilder(
            int index) {
          return getChildrenFieldBuilder().addBuilder(
              index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.getDefaultInstance());
        }
        /**
         * <pre>
         * Objects which this object depends on.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.ObjectReference children = 1;</code>
         */
        public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder> 
             getChildrenBuilderList() {
          return getChildrenFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder> 
            getChildrenFieldBuilder() {
          if (childrenBuilder_ == null) {
            childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReference.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.ObjectReferenceOrBuilder>(
                    children_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            children_ = null;
          }
          return childrenBuilder_;
        }

        private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor> attributes_ =
          java.util.Collections.emptyList();
        private void ensureAttributesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            attributes_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor>(attributes_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder> attributesBuilder_;

        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor> getAttributesList() {
          if (attributesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(attributes_);
          } else {
            return attributesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public int getAttributesCount() {
          if (attributesBuilder_ == null) {
            return attributes_.size();
          } else {
            return attributesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor getAttributes(int index) {
          if (attributesBuilder_ == null) {
            return attributes_.get(index);
          } else {
            return attributesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder setAttributes(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor value) {
          if (attributesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttributesIsMutable();
            attributes_.set(index, value);
            onChanged();
          } else {
            attributesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder setAttributes(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder builderForValue) {
          if (attributesBuilder_ == null) {
            ensureAttributesIsMutable();
            attributes_.set(index, builderForValue.build());
            onChanged();
          } else {
            attributesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder addAttributes(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor value) {
          if (attributesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttributesIsMutable();
            attributes_.add(value);
            onChanged();
          } else {
            attributesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder addAttributes(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor value) {
          if (attributesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAttributesIsMutable();
            attributes_.add(index, value);
            onChanged();
          } else {
            attributesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder addAttributes(
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder builderForValue) {
          if (attributesBuilder_ == null) {
            ensureAttributesIsMutable();
            attributes_.add(builderForValue.build());
            onChanged();
          } else {
            attributesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder addAttributes(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder builderForValue) {
          if (attributesBuilder_ == null) {
            ensureAttributesIsMutable();
            attributes_.add(index, builderForValue.build());
            onChanged();
          } else {
            attributesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder addAllAttributes(
            java.lang.Iterable<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor> values) {
          if (attributesBuilder_ == null) {
            ensureAttributesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, attributes_);
            onChanged();
          } else {
            attributesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder clearAttributes() {
          if (attributesBuilder_ == null) {
            attributes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            attributesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public Builder removeAttributes(int index) {
          if (attributesBuilder_ == null) {
            ensureAttributesIsMutable();
            attributes_.remove(index);
            onChanged();
          } else {
            attributesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder getAttributesBuilder(
            int index) {
          return getAttributesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder getAttributesOrBuilder(
            int index) {
          if (attributesBuilder_ == null) {
            return attributes_.get(index);  } else {
            return attributesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder> 
             getAttributesOrBuilderList() {
          if (attributesBuilder_ != null) {
            return attributesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(attributes_);
          }
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder addAttributesBuilder() {
          return getAttributesFieldBuilder().addBuilder(
              tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.getDefaultInstance());
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder addAttributesBuilder(
            int index) {
          return getAttributesFieldBuilder().addBuilder(
              index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.getDefaultInstance());
        }
        /**
         * <pre>
         * Serialized data specific to this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor attributes = 2;</code>
         */
        public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder> 
             getAttributesBuilderList() {
          return getAttributesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder> 
            getAttributesFieldBuilder() {
          if (attributesBuilder_ == null) {
            attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensor.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SerializedTensorOrBuilder>(
                    attributes_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            attributes_ = null;
          }
          return attributesBuilder_;
        }

        private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference> slotVariables_ =
          java.util.Collections.emptyList();
        private void ensureSlotVariablesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            slotVariables_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference>(slotVariables_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder> slotVariablesBuilder_;

        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference> getSlotVariablesList() {
          if (slotVariablesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(slotVariables_);
          } else {
            return slotVariablesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public int getSlotVariablesCount() {
          if (slotVariablesBuilder_ == null) {
            return slotVariables_.size();
          } else {
            return slotVariablesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference getSlotVariables(int index) {
          if (slotVariablesBuilder_ == null) {
            return slotVariables_.get(index);
          } else {
            return slotVariablesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder setSlotVariables(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference value) {
          if (slotVariablesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSlotVariablesIsMutable();
            slotVariables_.set(index, value);
            onChanged();
          } else {
            slotVariablesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder setSlotVariables(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder builderForValue) {
          if (slotVariablesBuilder_ == null) {
            ensureSlotVariablesIsMutable();
            slotVariables_.set(index, builderForValue.build());
            onChanged();
          } else {
            slotVariablesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder addSlotVariables(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference value) {
          if (slotVariablesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSlotVariablesIsMutable();
            slotVariables_.add(value);
            onChanged();
          } else {
            slotVariablesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder addSlotVariables(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference value) {
          if (slotVariablesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSlotVariablesIsMutable();
            slotVariables_.add(index, value);
            onChanged();
          } else {
            slotVariablesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder addSlotVariables(
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder builderForValue) {
          if (slotVariablesBuilder_ == null) {
            ensureSlotVariablesIsMutable();
            slotVariables_.add(builderForValue.build());
            onChanged();
          } else {
            slotVariablesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder addSlotVariables(
            int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder builderForValue) {
          if (slotVariablesBuilder_ == null) {
            ensureSlotVariablesIsMutable();
            slotVariables_.add(index, builderForValue.build());
            onChanged();
          } else {
            slotVariablesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder addAllSlotVariables(
            java.lang.Iterable<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference> values) {
          if (slotVariablesBuilder_ == null) {
            ensureSlotVariablesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, slotVariables_);
            onChanged();
          } else {
            slotVariablesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder clearSlotVariables() {
          if (slotVariablesBuilder_ == null) {
            slotVariables_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            slotVariablesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public Builder removeSlotVariables(int index) {
          if (slotVariablesBuilder_ == null) {
            ensureSlotVariablesIsMutable();
            slotVariables_.remove(index);
            onChanged();
          } else {
            slotVariablesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder getSlotVariablesBuilder(
            int index) {
          return getSlotVariablesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder getSlotVariablesOrBuilder(
            int index) {
          if (slotVariablesBuilder_ == null) {
            return slotVariables_.get(index);  } else {
            return slotVariablesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder> 
             getSlotVariablesOrBuilderList() {
          if (slotVariablesBuilder_ != null) {
            return slotVariablesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(slotVariables_);
          }
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder addSlotVariablesBuilder() {
          return getSlotVariablesFieldBuilder().addBuilder(
              tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.getDefaultInstance());
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder addSlotVariablesBuilder(
            int index) {
          return getSlotVariablesFieldBuilder().addBuilder(
              index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.getDefaultInstance());
        }
        /**
         * <pre>
         * Slot variables owned by this object.
         * </pre>
         *
         * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference slot_variables = 3;</code>
         */
        public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder> 
             getSlotVariablesBuilderList() {
          return getSlotVariablesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder> 
            getSlotVariablesFieldBuilder() {
          if (slotVariablesBuilder_ == null) {
            slotVariablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReference.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.SlotVariableReferenceOrBuilder>(
                    slotVariables_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            slotVariables_ = null;
          }
          return slotVariablesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.CheckpointableObjectGraph.CheckpointableObject)
      private static final tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject();
      }

      public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<CheckpointableObject>
          PARSER = new com.google.protobuf.AbstractParser<CheckpointableObject>() {
        @java.lang.Override
        public CheckpointableObject parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckpointableObject(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CheckpointableObject> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CheckpointableObject> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject> nodes_;
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
     */
    public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph)) {
        return super.equals(obj);
      }
      tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph other = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph) obj;

      boolean result = true;
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.CheckpointableObjectGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.CheckpointableObjectGraph)
        tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.class, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.Builder.class);
      }

      // Construct using tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.CheckpointableObjectGraphOuterClass.internal_static_tensorflow_CheckpointableObjectGraph_descriptor;
      }

      @java.lang.Override
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph getDefaultInstanceForType() {
        return tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph build() {
        tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph buildPartial() {
        tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph result = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph(this);
        int from_bitField0_ = bitField0_;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph) {
          return mergeFrom((tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph other) {
        if (other == tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder setNodes(
          int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder setNodes(
          int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder addNodes(tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder addNodes(
          int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder addNodes(
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder addNodes(
          int index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public java.util.List<? extends tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.CheckpointableObjectGraph.CheckpointableObject nodes = 1;</code>
       */
      public java.util.List<tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObject.Builder, tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph.CheckpointableObjectOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.CheckpointableObjectGraph)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.CheckpointableObjectGraph)
    private static final tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph();
    }

    public static tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CheckpointableObjectGraph>
        PARSER = new com.google.protobuf.AbstractParser<CheckpointableObjectGraph>() {
      @java.lang.Override
      public CheckpointableObjectGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CheckpointableObjectGraph(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckpointableObjectGraph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CheckpointableObjectGraph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.CheckpointableObjectGraphOuterClass.CheckpointableObjectGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CheckpointableObjectGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CheckpointableObjectGraph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:tensorflow/core/protobuf/checkpointabl" +
      "e_object_graph.proto\022\ntensorflow\"\233\005\n\031Che" +
      "ckpointableObjectGraph\022I\n\005nodes\030\001 \003(\0132:." +
      "tensorflow.CheckpointableObjectGraph.Che" +
      "ckpointableObject\032\262\004\n\024CheckpointableObje" +
      "ct\022\\\n\010children\030\001 \003(\0132J.tensorflow.Checkp" +
      "ointableObjectGraph.CheckpointableObject" +
      ".ObjectReference\022_\n\nattributes\030\002 \003(\0132K.t" +
      "ensorflow.CheckpointableObjectGraph.Chec" +
      "kpointableObject.SerializedTensor\022h\n\016slo" +
      "t_variables\030\003 \003(\0132P.tensorflow.Checkpoin" +
      "tableObjectGraph.CheckpointableObject.Sl" +
      "otVariableReference\0326\n\017ObjectReference\022\017" +
      "\n\007node_id\030\001 \001(\005\022\022\n\nlocal_name\030\002 \001(\t\032K\n\020S" +
      "erializedTensor\022\014\n\004name\030\001 \001(\t\022\021\n\tfull_na" +
      "me\030\002 \001(\t\022\026\n\016checkpoint_key\030\003 \001(\t\032l\n\025Slot" +
      "VariableReference\022!\n\031original_variable_n" +
      "ode_id\030\001 \001(\005\022\021\n\tslot_name\030\002 \001(\t\022\035\n\025slot_" +
      "variable_node_id\030\003 \001(\005B\003\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_CheckpointableObjectGraph_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_CheckpointableObjectGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CheckpointableObjectGraph_descriptor,
        new java.lang.String[] { "Nodes", });
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor =
      internal_static_tensorflow_CheckpointableObjectGraph_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor,
        new java.lang.String[] { "Children", "Attributes", "SlotVariables", });
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_descriptor =
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_ObjectReference_descriptor,
        new java.lang.String[] { "NodeId", "LocalName", });
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_descriptor =
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SerializedTensor_descriptor,
        new java.lang.String[] { "Name", "FullName", "CheckpointKey", });
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_descriptor =
      internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_descriptor.getNestedTypes().get(2);
    internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CheckpointableObjectGraph_CheckpointableObject_SlotVariableReference_descriptor,
        new java.lang.String[] { "OriginalVariableNodeId", "SlotName", "SlotVariableNodeId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
